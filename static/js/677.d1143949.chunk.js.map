{"version":3,"file":"static/js/677.d1143949.chunk.js","mappings":"uMACA,EAAwB,gC,SCWxB,EATyB,SAACA,GACxB,OACEC,EAAAA,EAAAA,MAAA,UAAQC,UAAWC,EAAcC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAMM,QACVD,EAAAA,EAAAA,KAAA,cAAAD,SAAaJ,EAAMO,WAGzB,E,2BCmCA,EAtCoB,WAClB,IAEQC,GAFOC,EAAAA,EAAAA,MAEPD,QAERE,GAA0DC,EAAAA,EAAAA,GACxDC,EAAAA,IACA,GAFMC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,OAAcC,EAAWL,EAAjBM,KAAmBC,EAAKP,EAALO,MAShD,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAYL,EACd,GAAG,CAACK,EAAaL,IAEF,YAAXM,GAEAT,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUE,UACvBC,EAAAA,EAAAA,KAACc,EAAAA,EAAc,MAKjBF,GACKZ,EAAAA,EAAAA,KAAA,KAAGH,UAAU,WAAUE,SAAEa,IAG7BF,EAAYT,MAKfL,EAAAA,EAAAA,MAACmB,EAAAA,SAAQ,CAAAhB,SAAA,EACPC,EAAAA,EAAAA,KAACgB,EAAgB,CAACf,KAAMS,EAAYT,KAAMC,OAAQQ,EAAYR,UAC9DF,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,QANFjB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBASd,C","sources":["webpack://react-router-6-upgrade/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__lpB19\"};","import React from 'react';\nimport classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"names":["props","_jsxs","className","classes","children","_jsx","text","author","quoteId","useParams","_useHttp","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","Fragment","HighlightedQuote","Outlet"],"sourceRoot":""}